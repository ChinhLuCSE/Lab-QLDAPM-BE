// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  //url      = env("DATABASE_URL")
  url = "postgresql://admin:abc12345@localhost:5433"
}

model Event {
  id          Int   @id @default(autoincrement())
  name        String?
  description String
  creatorId  String 

  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())

  creator User @relation(fields: [creatorId], references: [id])
  participants EventParticipant[]

  denied EventDenied?
  approved EventApproved?
}

model EventDenied {
  id        Int @id @default(autoincrement())
  eventId   Int @unique

  createdAt DateTime @default(now())

  event Event? @relation(fields: [eventId], references: [id])
}

model EventApproved {
  id        Int @id @default(autoincrement())
  eventId   Int @unique

  createdAt DateTime @default(now())

  event Event? @relation(fields: [eventId], references: [id])
}

model EventParticipant {
  id        Int @id @default(autoincrement())
  eventId   Int
  userId    String
  createdAt DateTime @default(now())

  event Event @relation(fields: [eventId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

  roles     UserRole[] 
  createdEvents    Event[]
  participatedEvents EventParticipant[]

}

model Role {
  id        Int   @id @default(autoincrement())
  name      String   @unique
  users     UserRole[]
}

model UserRole {
  id        Int @id @default(autoincrement())
  userId    String
  roleId    Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])
}

